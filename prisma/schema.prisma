// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  institute   Institute?   // Only if role = INSTITUTE
  documents   Document[]
  verifications Verification[]
}

model Institute {
  id             String   @id @default(uuid())
  instituteName  String
  userId         String   @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  user       User     @relation(fields: [userId], references: [id])
  documents  Document[]

  
}

model Document {
  id           String   @id @default(uuid())
  title        String
  url          String
  uploadedById String
  createdAt    DateTime @default(now())

  // Relations
  uploadedBy User      @relation(fields: [uploadedById], references: [id])
  institute  Institute? @relation(fields: [instituteId], references: [id])

  instituteId String?
}

model Verification {
  id        String   @id @default(uuid())
  status    String   @default("PENDING")
  userId    String
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  INSTITUTE
  ADMIN
}
